CREATE OR ALTER proc [dbo].[CMS_Planned_Submit]
(
 @CMS_PLANNING_ID varchar(30),
 @CMS_SO_NO varchar(30),
 @CMS_QUOTATION_NO varchar(30),
 @LNITMSEQ INT,
 @CMS_PO_NO varchar(30),
 @CMS_CONT_NO varchar(30),
 @CMS_CONT_TYPE INT,
 @CMS_SEAL_CONTAINER varchar(100),
 @CMS_DOORING_DATE varchar(30),
 @CMS_UNLOADING_DATE varchar(30),
 @CMS_Status INT,
 @USERID varchar(30),
 @PLNDTL PLNDTL readonly,
 @PLNCHRGS PLNCHRGS readonly,
 @PLNCOST PLNCOST readonly
)
AS
BEGIN 
	BEGIN TRY
		IF NOT EXISTS(select CMS_PLANNING_ID from CMS01131007C3 where RTRIM(CMS_PLANNING_ID)=RTRIM(@CMS_PLANNING_ID))
		BEGIN
			INSERT INTO CMS01131007C3(CMS_PLANNING_ID, CMS_SO_NO, CMS_SUBMITTED_DATE, CMS_QUOTATION_NO, LNITMSEQ, CMS_CONTRACT_NO, CMS_SALES_TYPE, CMS_ORDER_TYPE, 
			DOCDATE, LOCNCODE, LOCNDSCR, CURNCYID, CRNCYDSC, CMS_DESC, CUSTNMBR, CUSTNAME, PYMTTYPE, PYMTRMID, CMS_CUSTNMBR_BTA, CMS_PO_NO, 
			CMS_ROUTEID_FROM, CMS_ROUTEID_TO, CMS_CONT_NO, CMS_CONT_TYPE, CMS_SEAL_CONTAINER, CMS_STUFFING_DATE, CMS_DOORING_DATE, CMS_UNLOADING_DATE, 
			CMS_Status, CRUSRID, CREATDDT, CREATETIME, MDFUSRID, MODIFDT, MODIFTIME)
			select distinct @CMS_PLANNING_ID, HDR.CMS_SO_NO, HDR.CMS_SUBMITTED_DATE, @CMS_QUOTATION_NO, @LNITMSEQ, HDR.CMS_CONTRACT_NO, HDR.CMS_SALES_TYPE, HDR.CMS_ORDER_TYPE, 
			HDR.DOCDATE, HDR.LOCNCODE, HDR.LOCNDSCR, HDR.CURNCYID, HDR.CRNCYDSC, HDR.CMS_DESC, HDR.CUSTNMBR, HDR.CUSTNAME, HDR.PYMTTYPE, HDR.PYMTRMID, HDR.CMS_CUSTNMBR_BTA, @CMS_PO_NO, 
			COALESCE(ROU.CMS_ROUTEID_FROM, '') CMS_ROUTEID_FROM, COALESCE(ROU.CMS_ROUTEID_TO, '') CMS_ROUTEID_TO, @CMS_CONT_NO, @CMS_CONT_TYPE, @CMS_SEAL_CONTAINER, HDR.CMS_STUFFING_DATE,
			@CMS_DOORING_DATE, @CMS_UNLOADING_DATE, @CMS_Status, @USERID, CAST(GETDATE() as date), CAST(GETDATE() as time), @USERID, CAST(GETDATE() as date), CAST(GETDATE() as time)
			from CMS01133001C3 HDR
			LEFT JOIN CMS01133004C3 ROU ON HDR.CMS_SO_NO=ROU.CMS_SO_NO and ROU.CMS_QUOTATION_NO=@CMS_QUOTATION_NO and ROU.LNITMSEQ=@LNITMSEQ
			where HDR.CMS_SO_NO=@CMS_SO_NO

			INSERT INTO CMS01131008C3(CMS_PLANNING_ID, CMS_SO_NO, DOCNUMBR, DOCDATE, CMS_SO_FILENAME, CMS_SO_FILEPATH)
			SELECT distinct @CMS_PLANNING_ID, CMS_SO_NO, DOCNUMBR, DOCDATE, CMS_SO_FILENAME, CMS_SO_FILEPATH 
			from CMS01133002C3
			where CMS_SO_NO=@CMS_SO_NO
		END
		ELSE
		BEGIN
			UPDATE CMS01131007C3
			SET CMS_PO_NO=@CMS_PO_NO, CMS_CONT_NO=@CMS_CONT_NO, CMS_CONT_TYPE=@CMS_CONT_TYPE, CMS_SEAL_CONTAINER=@CMS_SEAL_CONTAINER, 
			CMS_DOORING_DATE=@CMS_DOORING_DATE, CMS_UNLOADING_DATE=@CMS_UNLOADING_DATE, CMS_Status=@CMS_Status,
			MDFUSRID=@USERID, MODIFDT=CAST(GETDATE() as date), MODIFTIME=CAST(GETDATE() as time)
			where RTRIM(CMS_PLANNING_ID)=RTRIM(@CMS_PLANNING_ID)
		END

		-- PLANNED DETAILS
		delete from CMS01131009C3 
		where RTRIM(CMS_PLANNING_ID)=RTRIM(@CMS_PLANNING_ID)

		INSERT INTO CMS01131009C3(CMS_PLANNING_ID, CMS_SO_NO, CMS_QUOTATION_NO, LNITMSEQ, LNSEQNBR, CMS_VEHICLE, CMS_NOPOL, CMS_NO_SURATJALAN, CMS_SHIPPING_LINES, CMS_SHIP_ID, CMS_SHIP_NAME, CMS_VOYAGE, 
		CMS_DEPARTURE_DATE, CMS_ARRIVING_DATE, CMS_TRAIN_NAME, CMS_AGENT_TYPE, CMS_STUFF_LOCATION, VENDORID, VENDNAME, CMS_FLAGGING, CMS_CONT_NO, CMS_SEAL_CONTAINER, CMS_CONT_UKURAN_ID, 
        CMS_CONT_UKURAN, DEPRTMNT, CMS_OUID, UOMSCHDL, QUANTITY, UNITPRCE, XTNDPRCE, SUBTOTAL, TAXDTLID, TXDTLPCT, TAXAMNT, TOTAL)
		select CMS_PLANNING_ID, CMS_SO_NO, CMS_QUOTATION_NO, LNITMSEQ, LNSEQNBR, CMS_VEHICLE, CMS_NOPOL, CMS_NO_SURATJALAN, CMS_SHIPPING_LINES, CMS_SHIP_ID, CMS_SHIP_NAME, CMS_VOYAGE, 
		CMS_DEPARTURE_DATE, CMS_ARRIVING_DATE, CMS_TRAIN_NAME, CMS_AGENT_TYPE, CMS_STUFF_LOCATION, VENDORID, VENDNAME, CMS_FLAGGING, CMS_CONT_NO, CMS_SEAL_CONTAINER, CMS_CONT_UKURAN_ID, 
        CMS_CONT_UKURAN, DEPRTMNT, CMS_OUID, UOMSCHDL, QUANTITY, UNITPRCE, XTNDPRCE, SUBTOTAL, TAXDTLID, TXDTLPCT, TAXAMNT, TOTAL 
		from @PLNDTL

		-- PLANNED CHARGES
		declare @PLANNING_ID varchar(21)='', @SO_NO varchar(21)='', @LNITMSEQQ int=0, @SELECTED int=0

		declare PLNCHRGS_Cursor cursor for
		
		select distinct CMS_PLANNING_ID, CMS_SO_NO, LNITMSEQ from @PLNCHRGS

		open PLNCHRGS_Cursor

		fetch next from PLNCHRGS_Cursor into @PLANNING_ID, @SO_NO, @LNITMSEQQ

		WHILE (@@FETCH_STATUS=0) BEGIN

			IF NOT EXISTS(select CMS_PLANNING_ID from CMS01131010C3 where CMS_PLANNING_ID=@PLANNING_ID and CMS_SO_NO=@SO_NO and LNITMSEQ=@LNITMSEQQ)
			BEGIN
				INSERT INTO CMS01131010C3(CMS_PLANNING_ID, CMS_SO_NO, LNITMSEQ, CMS_SELECTED, ITEMNMBR, ITEMDESC, 
				QUANTITY, UNITCOST, XTNDPRCE, CMS_DESC, SUBTOTAL, TAXDTLID, TXDTLPCT, TAXAMNT, TOTAL)
				select CMS_PLANNING_ID, CMS_SO_NO, LNITMSEQ, CMS_SELECTED, ITEMNMBR, ITEMDESC, 
				QUANTITY, UNITCOST, XTNDPRCE, CMS_DESC, SUBTOTAL, TAXDTLID, TXDTLPCT, TAXAMNT, TOTAL 
				from @PLNCHRGS
				WHERE CMS_PLANNING_ID=@PLANNING_ID and CMS_SO_NO=@SO_NO and LNITMSEQ=@LNITMSEQQ
			END
			ELSE
			BEGIN
				UPDATE A
				SET CMS_SELECTED=COALESCE(B.CMS_SELECTED, 0), ITEMNMBR=COALESCE(B.ITEMNMBR, ''), ITEMDESC=COALESCE(B.ITEMDESC, ''), QUANTITY=COALESCE(B.QUANTITY, 0), 
				UNITCOST=COALESCE(B.UNITCOST, 0), XTNDPRCE=COALESCE(B.XTNDPRCE, 0), CMS_DESC=COALESCE(B.CMS_DESC, ''), SUBTOTAL=COALESCE(B.SUBTOTAL, 0), 
				TAXDTLID=COALESCE(B.TAXDTLID, ''), TXDTLPCT=COALESCE(B.TXDTLPCT, 0), TAXAMNT=COALESCE(B.TAXAMNT, 0), TOTAL=COALESCE(B.TOTAL, 0)
				FROM CMS01131010C3 A
				INNER JOIN @PLNCHRGS B ON A.CMS_PLANNING_ID=B.CMS_PLANNING_ID and A.CMS_SO_NO=B.CMS_SO_NO and A.LNITMSEQ=B.LNITMSEQ
				WHERE A.CMS_PLANNING_ID=@PLANNING_ID and A.CMS_SO_NO=@SO_NO and A.LNITMSEQ=@LNITMSEQQ
			END

			fetch next from tblscdtl into @PLANNING_ID, @SO_NO, @LNITMSEQQ
		END  

		close PLNCHRGS_Cursor  
		deallocate PLNCHRGS_Cursor  

		-- PLANNED COST
		SET @PLANNING_ID=''
		SET @SO_NO=''
		SET @LNITMSEQQ=0
		SET @SELECTED=0

		declare PLNCOST_Cursor cursor for
		
		select distinct CMS_PLANNING_ID, CMS_SO_NO, LNITMSEQ from @PLNCOST

		open PLNCOST_Cursor

		fetch next from PLNCOST_Cursor into @PLANNING_ID, @SO_NO, @LNITMSEQQ

		WHILE (@@FETCH_STATUS=0) BEGIN

			IF NOT EXISTS(select CMS_PLANNING_ID from CMS01131011C3 where CMS_PLANNING_ID=@PLANNING_ID and CMS_SO_NO=@SO_NO and LNITMSEQ=@LNITMSEQQ)
			BEGIN
				INSERT INTO CMS01131011C3(CMS_PLANNING_ID, CMS_SO_NO, LNITMSEQ, CMS_SELECTED, ITEMNMBR, ITEMDESC, CURNCYID, 
				CMS_EXPENSES_NO, CMS_BANKTRX_NO, CHEKBKID, QUANTITY, UNITCOST, XTNDPRCE, CMS_DESC, TOTAL)
				select CMS_PLANNING_ID, CMS_SO_NO, LNITMSEQ, CMS_SELECTED, ITEMNMBR, ITEMDESC, CURNCYID, 
				CMS_EXPENSES_NO, CMS_BANKTRX_NO, CHEKBKID, QUANTITY, UNITCOST, XTNDPRCE, CMS_DESC, TOTAL
				from @PLNCOST
				WHERE CMS_PLANNING_ID=@PLANNING_ID and CMS_SO_NO=@SO_NO and LNITMSEQ=@LNITMSEQQ
			END
			ELSE
			BEGIN
				UPDATE A
				SET CMS_SELECTED=COALESCE(B.CMS_SELECTED, 0), ITEMNMBR=COALESCE(B.ITEMNMBR, ''), ITEMDESC=COALESCE(B.ITEMDESC, ''), CURNCYID=COALESCE(B.CURNCYID, ''), 
				CMS_EXPENSES_NO=COALESCE(B.CMS_EXPENSES_NO, ''), CMS_BANKTRX_NO=COALESCE(B.CMS_BANKTRX_NO, ''), CHEKBKID=COALESCE(B.CHEKBKID, ''), QUANTITY=COALESCE(B.QUANTITY, 0), 
				UNITCOST=COALESCE(B.UNITCOST, 0), XTNDPRCE=COALESCE(B.XTNDPRCE, 0), CMS_DESC=COALESCE(B.CMS_DESC, ''), TOTAL=COALESCE(B.TOTAL, 0)
				FROM CMS01131011C3 A
				INNER JOIN @PLNCOST B ON A.CMS_PLANNING_ID=B.CMS_PLANNING_ID and A.CMS_SO_NO=B.CMS_SO_NO and A.LNITMSEQ=B.LNITMSEQ
				WHERE A.CMS_PLANNING_ID=@PLANNING_ID and A.CMS_SO_NO=@SO_NO and A.LNITMSEQ=@LNITMSEQQ
			END

			fetch next from tblscdtl into @PLANNING_ID, @SO_NO, @LNITMSEQQ
		END  

		close PLNCOST_Cursor  
		deallocate PLNCOST_Cursor  

	END TRY
	BEGIN CATCH
		DECLARE @ErrorMessage NVARCHAR(4000)
		DECLARE @ErrorSeverity INT
		DECLARE @ErrorState INT

		SELECT @ErrorMessage = ERROR_MESSAGE(),
			   @ErrorSeverity = ERROR_SEVERITY(),
			   @ErrorState = ERROR_STATE()

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
		select @ErrorMessage as output
	END CATCH 
END
/*
exec [CMS_Planned_Submit] 'teg01'
*/
GO
